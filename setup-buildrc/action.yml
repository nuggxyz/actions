name: Setup buildrc
description: "setup buildrc in your github action"
inputs:
    version:
        description: "the version of buildrc to use"
        required: false
runs:
    using: "composite"
    steps:
        - name: buildrc-cache
          uses: actions/cache/restore@v3
          id: cache1
          with:
              path: "/home/runner/.buildrc-ghactions-cache"
              key: "${{ runner.os }}-${{ github.workflow }}-buildrc-${{ github.run_id }}-${{ github.run_number }}-${{ github.run_attempt }}"
        - name: buildrc-cache-save
          uses: actions/cache@v3
          with:
              path: /home/runner/.buildrc-ghactions-cache
              key: "${{ runner.os }}-${{ github.workflow }}-buildrc-${{ github.run_id }}-${{ github.run_number }}-${{ github.run_attempt }}-${{ github.job }}"
        - name: buildrc-setup
          uses: nuggxyz/actions/run@v0.0.61
          with:
              before: |
                  echo "setting up env üîÑ"
                  cache_dir="$HOME/.buildrc-ghactions-cache"
                  echo "setting BUILDRC_CACHE_DIR env var to = $cache_dir"
                  echo "BUILDRC_CACHE_DIR=$cache_dir" >> "$GITHUB_ENV"
                  execo="$cache_dir/buildrc-exec-override"
                  echo "setting BUILDRC_EXEC_OVERRIDE env var to = $execo"
                  echo "BUILDRC_EXEC_OVERRIDE=$execo" >> "$GITHUB_ENV"
                  temp_dir="$RUNNER_TEMP/.buildrc-ghactions-temp"
                  echo "setting BUILDRC_TEMP_DIR env var to = $temp_dir"
                  echo "BUILDRC_TEMP_DIR=$temp_dir" >> "$GITHUB_ENV"
                  path_dir="$RUNNER_TEMP/.buildrc-ghactions-path"
                  echo "setting BUILDRC_PATH_DIR env var to = $path_dir"
                  echo "BUILDRC_PATH_DIR=$path_dir" >> "$GITHUB_ENV"
                  echo "adding BUILDRC_PATH_DIR to GITHUB_PATH"
                  echo "$path_dir" >> "$GITHUB_PATH"
                  mkdir -p "$path_dir"
                  mkdir -p "$temp_dir"
                  mkdir -p "$cache_dir"
                  echo "env set up ‚úÖ"
              now: |
                  # Step 1: Check for buildrc-override
                  if [ -n "$INPUT_VERSION" ]; then
                     constant_version="$INPUT_VERSION"
                  fi
                  echo "Checking for buildrc-override... at $BUILDRC_EXEC_OVERRIDE"
                  if [ -z "$INPUT_VERSION" ] && [ -f "$BUILDRC_EXEC_OVERRIDE" ]; then
                      echo "override artifact found - using in place of $constant_version üî∂"
                      mkdir -p temp
                      cp "$BUILDRC_EXEC_OVERRIDE" "$BUILDRC_PATH_DIR/buildrc"
                  else
                      case "$RUNNER_ARCH" in
                      X64) arch="amd64" ;;
                      arm) arch="armv7" ;;
                      arm64) arch="arm64" ;;
                      *) echo "Unsupported architecture" && exit 1 ;;
                      esac
                      case "$RUNNER_OS" in
                      Linux) os="linux" ;;
                      MacOS) os="darwin" ;;
                      Darwin) os="darwin" ;;
                      Windows) os="windows" ;;
                      *) echo "Unsupported is" && exit 1 ;;
                      esac
                      smp_os_arch="$os-$arch"
                      os_arch_pattern="$file_name_prefix$smp_os_arch.tar.gz"
                      echo "override artifact not found. downloading from GitHub releases... $os_arch_pattern $constant_version üî∑"
                      # The name of the release file will be 'os-arch.tar.gz'
                      wrk_dir="$RUNNER_TEMP/setup-buildrc-wrk"
                      gh release download "$constant_version" -p "$os_arch_pattern" --repo nuggxyz/buildrc --dir "$wrk_dir"
                      tar -xzf "$wrk_dir/$os_arch_pattern" -C "$wrk_dir"
                      cp "$wrk_dir/$file_name_prefix$smp_os_arch" "$BUILDRC_PATH_DIR/buildrc"
                  fi

                  echo "running buildrc load ‚ñ∂Ô∏è"
                  chmod +x "$BUILDRC_PATH_DIR/buildrc"
                  "$BUILDRC_PATH_DIR/buildrc" load
                  echo "buildrc load successful ‚úÖ"
          env:
              constant_version: v0.1.12
              file_name_prefix: main-
              INPUT_VERSION: ${{ inputs.version }}
